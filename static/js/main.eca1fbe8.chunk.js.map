{"version":3,"sources":["Playground.js","useViewCounter.hook.js","App.js","index.js"],"names":["Playground","INITIAL_STATE","elevation","outlined","square","useState","state","setState","showCode","setShowCode","codeValue","setCodeValue","copySuccess","setCopySuccess","textAreaRef","useRef","className","customClass","htmlFor","name","id","type","placeholder","onChange","event","Number","target","value","onClick","code","replace","e","current","select","document","execCommand","focus","ref","useViewCounter","views","setViews","slug","pathname","window","location","charAt","substring","getSlug","useEffect","fetch","mode","then","res","json","totalViews","catch","err","console","error","message","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eca1fbe8.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Paper from '@ramonak/paper';\r\nimport './App.css';\r\n\r\nconst Playground = () => {\r\n  const INITIAL_STATE = {\r\n    elevation: '',\r\n    outlined: false,\r\n    square: false\r\n  };\r\n  const [state, setState] = useState(INITIAL_STATE);\r\n  const [showCode, setShowCode] = useState(false);\r\n  const [codeValue, setCodeValue] = useState('');\r\n  const [copySuccess, setCopySuccess] = useState('Copy');\r\n  const textAreaRef = useRef(null);\r\n\r\n  const handleReset = () => {\r\n    setState(INITIAL_STATE);\r\n    setShowCode(false);\r\n  };\r\n\r\n  const copyToClipboard = (e) => {\r\n    textAreaRef.current.select();\r\n    document.execCommand('copy');\r\n    e.target.focus();\r\n    setCopySuccess('Copied!');\r\n  };\r\n\r\n  const generateCode = () => {\r\n    setCopySuccess('Copy');\r\n    setShowCode(true);\r\n    const tempCode = `<Paper ${\r\n      state.elevation && `elevation={${state.elevation}}`\r\n    } ${state.outlined ? 'outlined' : ''} ${state.square ? 'square' : ''} />`;\r\n    const code = tempCode\r\n      .replace(/^\\s*$(?:\\r\\n?|\\n)/gm, '')\r\n      .replace(/  +/g, ' ');\r\n    setCodeValue(code);\r\n  };\r\n\r\n  return (\r\n    <div className='playground-container'>\r\n      <div className='paper-playground-wrapper'>\r\n        <Paper customClass='paper-class' {...state} />\r\n      </div>\r\n      <div className='parameters-wrapper'>\r\n        <label htmlFor='elevation'>Elevation</label>\r\n        <input\r\n          name='elevation'\r\n          id='elevation'\r\n          type='text'\r\n          placeholder='1-24 or empty'\r\n          onChange={(event) =>\r\n            setState({ ...state, elevation: Number(event.target.value) })\r\n          }\r\n        />\r\n        <label htmlFor='outlined'>Outlined</label>\r\n        <select\r\n          name='outlined'\r\n          id='outlined'\r\n          onChange={() => setState({ ...state, outlined: !state.outlined })}\r\n        >\r\n          <option value={false}>False</option>\r\n          <option value={true}>True</option>\r\n        </select>\r\n        <label htmlFor='square'>Square</label>\r\n        <select\r\n          name='square'\r\n          id='square'\r\n          onChange={() => setState({ ...state, square: !state.square })}\r\n        >\r\n          <option value={false}>False</option>\r\n          <option value={true}>True</option>\r\n        </select>\r\n\r\n        <button className='myButton reset-button' onClick={handleReset}>\r\n          RESET\r\n        </button>\r\n        <button className='myButton code-button' onClick={generateCode}>\r\n          Generate Component Code\r\n        </button>\r\n        <div>\r\n          {showCode && (\r\n            <div className='code-area'>\r\n              <button onClick={copyToClipboard}>{copySuccess}</button>\r\n              <textarea\r\n                ref={textAreaRef}\r\n                value={codeValue}\r\n                onChange={(e) => setCodeValue(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playground;\r\n","import { useState, useEffect } from 'react';\nconst useViewCounter = () => {\n  const [views, setViews] = useState(null);\n\n  const getSlug = () => {\n    let pathname = window.location.pathname;\n    if (pathname.charAt(0) === '/') {\n      pathname = pathname.substring(1);\n    }\n    return pathname;\n  };\n\n  const slug = getSlug();\n\n  useEffect(() => {\n    // Don't count views on localhost\n    if (process.env.NODE_ENV !== 'production') {\n      return;\n    }\n\n    fetch(`https://my-projects-dashboard.vercel.app/api/views/${slug}`, {\n      mode: 'no-cors'\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setViews(json.totalViews);\n      })\n      .catch((err) => console.error(err.message));\n  }, [slug]);\n  return { views };\n};\n\nexport default useViewCounter;\n","import React from 'react';\nimport './App.css';\nimport Paper from '@ramonak/paper';\nimport Playground from './Playground';\nimport useViewCounter from './useViewCounter.hook';\n\nconst App = () => {\n  useViewCounter();\n  return (\n    <div className='container'>\n      <h2>DEMO</h2>\n      <div className='wrapper'>\n        <Paper customClass='paper-class'>\n          <div className='text'>\n            <b>Default:</b> <br />\n            No Elevation <br /> No Outline <br /> Rounded corners{' '}\n          </div>\n        </Paper>\n        <Paper elevation={3} customClass='paper-class'>\n          <div className='text'>\n            Elevation = 3 <br /> No Outline <br /> Rounded corners{' '}\n          </div>\n        </Paper>\n        <Paper elevation={7} outlined customClass='paper-class' square>\n          <div className='text'>\n            Elevation = 7 <br /> Oulined <br /> Square{' '}\n          </div>\n        </Paper>\n      </div>\n      <h2>Playground</h2>\n      <Playground />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}